name: Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Install Node.js
    - name: Install Node.js
      run: |
        echo "Adding Node.js 18.x repository..."
        curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
        echo "Installing Node.js..."
        sudo apt-get install -y nodejs
        echo "Node.js version:"
        node -v
        echo "npm version:"
        npm -v

    # Step 3: Configure SSH for Cloning
    - name: Configure SSH Key
      run: |
        echo "Configuring SSH key for GitHub..."
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H github.com >> ~/.ssh/known_hosts

    # Step 4: Ensure Project Directory Exists
    - name: Ensure Project Directory Exists
      run: |
        if [ ! -d /var/www/AI-Resume-Builder-Frontend ]; then
          echo "Project directory not found. Cloning repository..."
          git clone git@github.com:username/AI-Resume-Builder-Frontend.git /var/www/AI-Resume-Builder-Frontend
        else
          echo "Project directory exists."
        fi

    # Step 5: Navigate to the Project Directory
    - name: Navigate to Project Directory
      run: |
        cd /var/www/AI-Resume-Builder-Frontend

    # Step 6: Install Dependencies
    - name: Install Dependencies
      run: |
        cd /var/www/AI-Resume-Builder-Frontend
        npm install --production

    # Step 7: Build Application
    - name: Build Application
      run: |
        cd /var/www/AI-Resume-Builder-Frontend
        npm run build

    # Step 8: Configure and Start PM2
    - name: Configure and Start PM2
      run: |
        sudo npm install -g pm2
        pm2 start npm --name "frontend" -- start
        pm2 save
        pm2 startup | sudo bash
        pm2 list

    # Step 9: Restart Nginx
    - name: Restart Nginx
      run: |
        sudo systemctl reload nginx
        sudo systemctl status nginx

    # Step 10: Fetch Nginx Logs
    - name: Fetch Nginx Logs
      run: |
        sudo tail -n 20 /var/log/nginx/error.log
        sudo tail -n 20 /var/log/nginx/access.log
